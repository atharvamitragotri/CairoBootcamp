{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeShortString = exports.encodeShortString = exports.isShortString = exports.isASCII = void 0;\nvar encode_1 = require(\"./encode\");\nfunction isASCII(str) {\n  // eslint-disable-next-line no-control-regex\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\nexports.isASCII = isASCII;\n// function to check if string has less or equal 31 characters\nfunction isShortString(str) {\n  return str.length <= 31;\n}\nexports.isShortString = isShortString;\nfunction encodeShortString(str) {\n  if (!isASCII(str)) throw new Error(\"\".concat(str, \" is not an ASCII string\"));\n  if (!isShortString(str)) throw new Error(\"\".concat(str, \" is too long\"));\n  return (0, encode_1.addHexPrefix)(str.replace(/./g, function (char) {\n    return char.charCodeAt(0).toString(16);\n  }));\n}\nexports.encodeShortString = encodeShortString;\nfunction decodeShortString(str) {\n  return (0, encode_1.removeHexPrefix)(str).replace(/.{2}/g, function (hex) {\n    return String.fromCharCode(parseInt(hex, 16));\n  });\n}\nexports.decodeShortString = decodeShortString;","map":{"version":3,"names":["Object","defineProperty","exports","value","decodeShortString","encodeShortString","isShortString","isASCII","encode_1","require","str","test","length","Error","concat","addHexPrefix","replace","char","charCodeAt","toString","removeHexPrefix","hex","String","fromCharCode","parseInt"],"sources":["C:/Users/admin/Documents/Blockchain test/CairoBootcamp/starknet_js_demo/node_modules/starknet/dist/utils/shortString.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeShortString = exports.encodeShortString = exports.isShortString = exports.isASCII = void 0;\nvar encode_1 = require(\"./encode\");\nfunction isASCII(str) {\n    // eslint-disable-next-line no-control-regex\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\nexports.isASCII = isASCII;\n// function to check if string has less or equal 31 characters\nfunction isShortString(str) {\n    return str.length <= 31;\n}\nexports.isShortString = isShortString;\nfunction encodeShortString(str) {\n    if (!isASCII(str))\n        throw new Error(\"\".concat(str, \" is not an ASCII string\"));\n    if (!isShortString(str))\n        throw new Error(\"\".concat(str, \" is too long\"));\n    return (0, encode_1.addHexPrefix)(str.replace(/./g, function (char) { return char.charCodeAt(0).toString(16); }));\n}\nexports.encodeShortString = encodeShortString;\nfunction decodeShortString(str) {\n    return (0, encode_1.removeHexPrefix)(str).replace(/.{2}/g, function (hex) { return String.fromCharCode(parseInt(hex, 16)); });\n}\nexports.decodeShortString = decodeShortString;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,aAAa,GAAGJ,OAAO,CAACK,OAAO,GAAG,KAAK,CAAC;AACxG,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,SAASF,OAAO,CAACG,GAAG,EAAE;EAClB;EACA,OAAO,gBAAgB,CAACC,IAAI,CAACD,GAAG,CAAC;AACrC;AACAR,OAAO,CAACK,OAAO,GAAGA,OAAO;AACzB;AACA,SAASD,aAAa,CAACI,GAAG,EAAE;EACxB,OAAOA,GAAG,CAACE,MAAM,IAAI,EAAE;AAC3B;AACAV,OAAO,CAACI,aAAa,GAAGA,aAAa;AACrC,SAASD,iBAAiB,CAACK,GAAG,EAAE;EAC5B,IAAI,CAACH,OAAO,CAACG,GAAG,CAAC,EACb,MAAM,IAAIG,KAAK,CAAC,EAAE,CAACC,MAAM,CAACJ,GAAG,EAAE,yBAAyB,CAAC,CAAC;EAC9D,IAAI,CAACJ,aAAa,CAACI,GAAG,CAAC,EACnB,MAAM,IAAIG,KAAK,CAAC,EAAE,CAACC,MAAM,CAACJ,GAAG,EAAE,cAAc,CAAC,CAAC;EACnD,OAAO,CAAC,CAAC,EAAEF,QAAQ,CAACO,YAAY,EAAEL,GAAG,CAACM,OAAO,CAAC,IAAI,EAAE,UAAUC,IAAI,EAAE;IAAE,OAAOA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;EAAE,CAAC,CAAC,CAAC;AACrH;AACAjB,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7C,SAASD,iBAAiB,CAACM,GAAG,EAAE;EAC5B,OAAO,CAAC,CAAC,EAAEF,QAAQ,CAACY,eAAe,EAAEV,GAAG,CAAC,CAACM,OAAO,CAAC,OAAO,EAAE,UAAUK,GAAG,EAAE;IAAE,OAAOC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACH,GAAG,EAAE,EAAE,CAAC,CAAC;EAAE,CAAC,CAAC;AACjI;AACAnB,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}