{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromCallsToExecuteCalldataWithNonce = exports.fromCallsToExecuteCalldata = exports.transformCallsToMulticallArrays = void 0;\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\n/**\n * Transforms a list of Calls, each with their own calldata, into\n * two arrays: one with the entrypoints, and one with the concatenated calldata.\n * @param calls\n * @returns\n */\nvar transformCallsToMulticallArrays = function (calls) {\n  var callArray = [];\n  var calldata = [];\n  calls.forEach(function (call) {\n    var data = call.calldata || [];\n    callArray.push({\n      to: (0, number_1.toBN)(call.contractAddress).toString(10),\n      selector: (0, number_1.toBN)((0, hash_1.getSelectorFromName)(call.entrypoint)).toString(10),\n      data_offset: calldata.length.toString(),\n      data_len: data.length.toString()\n    });\n    calldata.push.apply(calldata, __spreadArray([], __read(data), false));\n  });\n  return {\n    callArray: callArray,\n    calldata: (0, number_1.bigNumberishArrayToDecimalStringArray)(calldata)\n  };\n};\nexports.transformCallsToMulticallArrays = transformCallsToMulticallArrays;\n/**\n * Transforms a list of calls in the full flattened calldata expected\n * by the __execute__ protocol.\n * @param calls\n * @returns\n */\nvar fromCallsToExecuteCalldata = function (calls) {\n  var _a = (0, exports.transformCallsToMulticallArrays)(calls),\n    callArray = _a.callArray,\n    calldata = _a.calldata;\n  return __spreadArray(__spreadArray(__spreadArray([callArray.length.toString()], __read(callArray.map(function (_a) {\n    var to = _a.to,\n      selector = _a.selector,\n      data_offset = _a.data_offset,\n      data_len = _a.data_len;\n    return [to, selector, data_offset, data_len];\n  }).flat()), false), [calldata.length.toString()], false), __read(calldata), false);\n};\nexports.fromCallsToExecuteCalldata = fromCallsToExecuteCalldata;\nvar fromCallsToExecuteCalldataWithNonce = function (calls, nonce) {\n  return __spreadArray(__spreadArray([], __read((0, exports.fromCallsToExecuteCalldata)(calls)), false), [(0, number_1.toBN)(nonce).toString()], false);\n};\nexports.fromCallsToExecuteCalldataWithNonce = fromCallsToExecuteCalldataWithNonce;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","Object","defineProperty","exports","fromCallsToExecuteCalldataWithNonce","fromCallsToExecuteCalldata","transformCallsToMulticallArrays","hash_1","require","number_1","calls","callArray","calldata","forEach","data","toBN","contractAddress","toString","selector","getSelectorFromName","entrypoint","data_offset","data_len","apply","bigNumberishArrayToDecimalStringArray","_a","map","flat","nonce"],"sources":["C:/Users/admin/Documents/Blockchain test/CairoBootcamp/starknet_js_demo/node_modules/starknet/dist/utils/transaction.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromCallsToExecuteCalldataWithNonce = exports.fromCallsToExecuteCalldata = exports.transformCallsToMulticallArrays = void 0;\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\n/**\n * Transforms a list of Calls, each with their own calldata, into\n * two arrays: one with the entrypoints, and one with the concatenated calldata.\n * @param calls\n * @returns\n */\nvar transformCallsToMulticallArrays = function (calls) {\n    var callArray = [];\n    var calldata = [];\n    calls.forEach(function (call) {\n        var data = call.calldata || [];\n        callArray.push({\n            to: (0, number_1.toBN)(call.contractAddress).toString(10),\n            selector: (0, number_1.toBN)((0, hash_1.getSelectorFromName)(call.entrypoint)).toString(10),\n            data_offset: calldata.length.toString(),\n            data_len: data.length.toString(),\n        });\n        calldata.push.apply(calldata, __spreadArray([], __read(data), false));\n    });\n    return {\n        callArray: callArray,\n        calldata: (0, number_1.bigNumberishArrayToDecimalStringArray)(calldata),\n    };\n};\nexports.transformCallsToMulticallArrays = transformCallsToMulticallArrays;\n/**\n * Transforms a list of calls in the full flattened calldata expected\n * by the __execute__ protocol.\n * @param calls\n * @returns\n */\nvar fromCallsToExecuteCalldata = function (calls) {\n    var _a = (0, exports.transformCallsToMulticallArrays)(calls), callArray = _a.callArray, calldata = _a.calldata;\n    return __spreadArray(__spreadArray(__spreadArray([\n        callArray.length.toString()\n    ], __read(callArray\n        .map(function (_a) {\n        var to = _a.to, selector = _a.selector, data_offset = _a.data_offset, data_len = _a.data_len;\n        return [to, selector, data_offset, data_len];\n    })\n        .flat()), false), [\n        calldata.length.toString()\n    ], false), __read(calldata), false);\n};\nexports.fromCallsToExecuteCalldata = fromCallsToExecuteCalldata;\nvar fromCallsToExecuteCalldataWithNonce = function (calls, nonce) {\n    return __spreadArray(__spreadArray([], __read((0, exports.fromCallsToExecuteCalldata)(calls)), false), [(0, number_1.toBN)(nonce).toString()], false);\n};\nexports.fromCallsToExecuteCalldataWithNonce = fromCallsToExecuteCalldataWithNonce;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIH,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOF,CAAC;EAChB,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAI,CAACN,CAAC,CAAC;IAAEO,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACR,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAI,EAAE,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKT,CAAC,GAAGG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEH,CAAC,CAACI,IAAI,CAACD,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAII,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,IAAIO,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEZ,EAAE,EAAEH,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAE,EAAE;IACjF,IAAIG,EAAE,IAAI,EAAEH,CAAC,IAAIY,IAAI,CAAC,EAAE;MACpB,IAAI,CAACT,EAAE,EAAEA,EAAE,GAAGc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,EAAE,CAAC,EAAEZ,CAAC,CAAC;MACpDG,EAAE,CAACH,CAAC,CAAC,GAAGY,IAAI,CAACZ,CAAC,CAAC;IACnB;EACJ;EACA,OAAOW,EAAE,CAACS,MAAM,CAACjB,EAAE,IAAIc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,CAAC,CAAC;AAC5D,CAAC;AACDS,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEf,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7De,OAAO,CAACC,mCAAmC,GAAGD,OAAO,CAACE,0BAA0B,GAAGF,OAAO,CAACG,+BAA+B,GAAG,KAAK,CAAC;AACnI,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,+BAA+B,GAAG,UAAUI,KAAK,EAAE;EACnD,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,QAAQ,GAAG,EAAE;EACjBF,KAAK,CAACG,OAAO,CAAC,UAAUhC,IAAI,EAAE;IAC1B,IAAIiC,IAAI,GAAGjC,IAAI,CAAC+B,QAAQ,IAAI,EAAE;IAC9BD,SAAS,CAACxB,IAAI,CAAC;MACXI,EAAE,EAAE,CAAC,CAAC,EAAEkB,QAAQ,CAACM,IAAI,EAAElC,IAAI,CAACmC,eAAe,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;MACzDC,QAAQ,EAAE,CAAC,CAAC,EAAET,QAAQ,CAACM,IAAI,EAAE,CAAC,CAAC,EAAER,MAAM,CAACY,mBAAmB,EAAEtC,IAAI,CAACuC,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,EAAE,CAAC;MAC3FI,WAAW,EAAET,QAAQ,CAACjB,MAAM,CAACsB,QAAQ,EAAE;MACvCK,QAAQ,EAAER,IAAI,CAACnB,MAAM,CAACsB,QAAQ;IAClC,CAAC,CAAC;IACFL,QAAQ,CAACzB,IAAI,CAACoC,KAAK,CAACX,QAAQ,EAAEtB,aAAa,CAAC,EAAE,EAAEhB,MAAM,CAACwC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;EACzE,CAAC,CAAC;EACF,OAAO;IACHH,SAAS,EAAEA,SAAS;IACpBC,QAAQ,EAAE,CAAC,CAAC,EAAEH,QAAQ,CAACe,qCAAqC,EAAEZ,QAAQ;EAC1E,CAAC;AACL,CAAC;AACDT,OAAO,CAACG,+BAA+B,GAAGA,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,0BAA0B,GAAG,UAAUK,KAAK,EAAE;EAC9C,IAAIe,EAAE,GAAG,CAAC,CAAC,EAAEtB,OAAO,CAACG,+BAA+B,EAAEI,KAAK,CAAC;IAAEC,SAAS,GAAGc,EAAE,CAACd,SAAS;IAAEC,QAAQ,GAAGa,EAAE,CAACb,QAAQ;EAC9G,OAAOtB,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,CAC7CqB,SAAS,CAAChB,MAAM,CAACsB,QAAQ,EAAE,CAC9B,EAAE3C,MAAM,CAACqC,SAAS,CACde,GAAG,CAAC,UAAUD,EAAE,EAAE;IACnB,IAAIlC,EAAE,GAAGkC,EAAE,CAAClC,EAAE;MAAE2B,QAAQ,GAAGO,EAAE,CAACP,QAAQ;MAAEG,WAAW,GAAGI,EAAE,CAACJ,WAAW;MAAEC,QAAQ,GAAGG,EAAE,CAACH,QAAQ;IAC5F,OAAO,CAAC/B,EAAE,EAAE2B,QAAQ,EAAEG,WAAW,EAAEC,QAAQ,CAAC;EAChD,CAAC,CAAC,CACGK,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAClBf,QAAQ,CAACjB,MAAM,CAACsB,QAAQ,EAAE,CAC7B,EAAE,KAAK,CAAC,EAAE3C,MAAM,CAACsC,QAAQ,CAAC,EAAE,KAAK,CAAC;AACvC,CAAC;AACDT,OAAO,CAACE,0BAA0B,GAAGA,0BAA0B;AAC/D,IAAID,mCAAmC,GAAG,UAAUM,KAAK,EAAEkB,KAAK,EAAE;EAC9D,OAAOtC,aAAa,CAACA,aAAa,CAAC,EAAE,EAAEhB,MAAM,CAAC,CAAC,CAAC,EAAE6B,OAAO,CAACE,0BAA0B,EAAEK,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAED,QAAQ,CAACM,IAAI,EAAEa,KAAK,CAAC,CAACX,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;AACzJ,CAAC;AACDd,OAAO,CAACC,mCAAmC,GAAGA,mCAAmC"},"metadata":{},"sourceType":"script","externalDependencies":[]}