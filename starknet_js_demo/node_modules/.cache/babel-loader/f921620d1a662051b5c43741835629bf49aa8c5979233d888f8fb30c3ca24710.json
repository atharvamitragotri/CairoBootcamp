{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Blockchain test\\\\CairoBootcamp\\\\starknet_js_demo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"get-starknet\";\nimport { Contract } from \"starknet\";\nimport { toBN } from \"starknet/dist/utils/number\";\nimport contractAbi from \"./contract_abi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x0704ed6b41f5d9dfdc5037c627d53ee52aef0675ed47ba59b57b8152c0144a9e\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState('');\n  const [address, setAddress] = useState('');\n  const [retrievedBalance, setRetrievedBalance] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const connectWallet = async () => {\n    try {\n      // connect the wallet\n      const starknet = await connect();\n      await (starknet === null || starknet === void 0 ? void 0 : starknet.enable({\n        starknetVersion: \"v4\"\n      }));\n      // set up the provider\n      setProvider(starknet.account);\n      // set wallet address\n      setAddress(starknet.selectedAddress);\n      // set connection flag\n      setIsConnected(true);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const increaseBalanceFunction = async () => {\n    try {\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider);\n\n      // call the increase_balance function\n      await contract.increase_balance(13);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const getBalanceFunction = async () => {\n    try {\n      // create a contract object based on the provider, address and abi\n      const contract = new Contract(contractAbi, contractAddress, provider);\n      // call the function\n      const _bal = await contract.get_balance();\n      // decode the result\n      const _decodedBalance = toBN(_bal.res, 16).toString();\n      // display the result\n      setRetrievedBalance(_decodedBalance);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Minimal Starknet JS DEMO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect\",\n          children: [address.slice(0, 5), \"...\", address.slice(60)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect\",\n          onClick: () => connectWallet(),\n          children: \"Connect wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"Using Starknet JS with a simple contract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            href: \"#\",\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Use Alpha-goerli test net! \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardForm\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"Add ETH  \",\n                onClick: () => increaseBalanceFunction()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardForm\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"Get Balance \",\n                onClick: () => getBalanceFunction()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Balance: \", retrievedBalance, \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6HwMXl8Cm9tjXR9ali7bRo5p0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","connect","Contract","toBN","contractAbi","contractAddress","App","provider","setProvider","address","setAddress","retrievedBalance","setRetrievedBalance","isConnected","setIsConnected","connectWallet","starknet","enable","starknetVersion","account","selectedAddress","error","alert","message","increaseBalanceFunction","contract","increase_balance","getBalanceFunction","_bal","get_balance","_decodedBalance","res","toString","slice"],"sources":["C:/Users/admin/Documents/Blockchain test/CairoBootcamp/starknet_js_demo/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { useState, useEffect } from \"react\"\r\nimport { connect } from \"get-starknet\"\r\nimport { Contract } from \"starknet\"\r\nimport { toBN } from \"starknet/dist/utils/number\"\r\n\r\nimport contractAbi from \"./contract_abi.json\"\r\n\r\nconst contractAddress = \"0x0704ed6b41f5d9dfdc5037c627d53ee52aef0675ed47ba59b57b8152c0144a9e\"\r\n\r\n\r\nfunction App() {\r\n  const [provider, setProvider] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [retrievedBalance, setRetrievedBalance] = useState('')\r\n  const [isConnected, setIsConnected] = useState(false)\r\n\r\n\r\n  const connectWallet = async() => {\r\n    try{\r\n      // connect the wallet\r\n      const starknet = await connect()\r\n      await starknet?.enable({ starknetVersion: \"v4\" })\r\n      // set up the provider\r\n      setProvider(starknet.account)\r\n      // set wallet address\r\n     setAddress(starknet.selectedAddress)\r\n      // set connection flag\r\n      setIsConnected(true)\r\n      \r\n    }\r\n    catch(error){\r\n      alert(error.message)\r\n    }\r\n  }\r\n\r\n  const increaseBalanceFunction = async() => {\r\n    try{\r\n      // create a contract object based on the provider, address and abi\r\n      const contract = new Contract(contractAbi, contractAddress, provider)\r\n      \r\n      // call the increase_balance function\r\n      await contract.increase_balance(13)\r\n      \r\n    }\r\n    catch(error){\r\n      alert(error.message)\r\n    }\r\n  }\r\n\r\n  const getBalanceFunction = async() => {\r\n    try{\r\n      // create a contract object based on the provider, address and abi\r\n      const contract = new Contract(contractAbi, contractAddress, provider)\r\n      // call the function\r\n      const _bal = await contract.get_balance()\r\n      // decode the result\r\n      const _decodedBalance = toBN(_bal.res, 16).toString()\r\n      // display the result\r\n      setRetrievedBalance(_decodedBalance)\r\n    }\r\n    catch(error){\r\n      alert(error.message)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <main className=\"main\">\r\n          <h1 className=\"title\">\r\n            Minimal Starknet JS DEMO\r\n          </h1>\r\n          {\r\n            isConnected ?\r\n            <button className=\"connect\">{address.slice(0, 5)}...{address.slice(60)}</button> :\r\n            <button className=\"connect\" onClick={() => connectWallet()}>Connect wallet</button>\r\n          }\r\n\r\n          <p className=\"description\">\r\n            Using Starknet JS with a simple contract\r\n          </p>\r\n\r\n          <div className=\"grid\">\r\n            <div href=\"#\" className=\"card\">\r\n              <h2>Use Alpha-goerli test net! &rarr;</h2>\r\n\r\n\r\n              <div className=\"cardForm\">\r\n                {/* <input type=\"text\" className=\"input\" placeholder=\"Enter Name\" onChange={(e) => setName(e.target.value)} /> */}\r\n\r\n                <input type=\"submit\" className=\"button\" value=\"Add ETH  \" onClick={() => increaseBalanceFunction()} />\r\n              </div>\r\n\r\n              <hr />\r\n\r\n              {/* <p>Insert a wallet address, to retrieve its name.</p> */}\r\n              <div className=\"cardForm\">\r\n               \r\n                <input type=\"submit\" className=\"button\" value=\"Get Balance \" onClick={() => getBalanceFunction()} />\r\n              </div>\r\n              <p>Balance: {retrievedBalance} ETH</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}