{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proofMerklePath = exports.MerkleTree = void 0;\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\nvar MerkleTree = /** @class */function () {\n  function MerkleTree(leafHashes) {\n    this.branches = [];\n    this.leaves = leafHashes;\n    this.root = this.build(leafHashes);\n  }\n  MerkleTree.prototype.build = function (leaves) {\n    if (leaves.length === 1) {\n      return leaves[0];\n    }\n    if (leaves.length !== this.leaves.length) {\n      this.branches.push(leaves);\n    }\n    var newLeaves = [];\n    for (var i = 0; i < leaves.length; i += 2) {\n      if (i + 1 === leaves.length) {\n        newLeaves.push(MerkleTree.hash(leaves[i], '0x0'));\n      } else {\n        newLeaves.push(MerkleTree.hash(leaves[i], leaves[i + 1]));\n      }\n    }\n    return this.build(newLeaves);\n  };\n  MerkleTree.hash = function (a, b) {\n    var _a = __read([(0, number_1.toBN)(a), (0, number_1.toBN)(b)].sort(function (x, y) {\n        return x.gte(y) ? 1 : -1;\n      }), 2),\n      aSorted = _a[0],\n      bSorted = _a[1];\n    return (0, hash_1.pedersen)([aSorted, bSorted]);\n  };\n  MerkleTree.prototype.getProof = function (leaf, branch, hashPath) {\n    var _a, _b;\n    if (branch === void 0) {\n      branch = this.leaves;\n    }\n    if (hashPath === void 0) {\n      hashPath = [];\n    }\n    var index = branch.indexOf(leaf);\n    if (index === -1) {\n      throw new Error('leaf not found');\n    }\n    if (branch.length === 1) {\n      return hashPath;\n    }\n    var isLeft = index % 2 === 0;\n    var neededBranch = (_a = isLeft ? branch[index + 1] : branch[index - 1]) !== null && _a !== void 0 ? _a : '0x0';\n    var newHashPath = __spreadArray(__spreadArray([], __read(hashPath), false), [neededBranch], false);\n    var currentBranchLevelIndex = this.leaves.length === branch.length ? -1 : this.branches.findIndex(function (b) {\n      return b.length === branch.length;\n    });\n    var nextBranch = (_b = this.branches[currentBranchLevelIndex + 1]) !== null && _b !== void 0 ? _b : [this.root];\n    return this.getProof(MerkleTree.hash(isLeft ? leaf : neededBranch, isLeft ? neededBranch : leaf), nextBranch, newHashPath);\n  };\n  return MerkleTree;\n}();\nexports.MerkleTree = MerkleTree;\nfunction proofMerklePath(root, leaf, path) {\n  if (path.length === 0) {\n    return root === leaf;\n  }\n  var _a = __read(path),\n    next = _a[0],\n    rest = _a.slice(1);\n  return proofMerklePath(root, MerkleTree.hash(leaf, next), rest);\n}\nexports.proofMerklePath = proofMerklePath;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","Object","defineProperty","exports","proofMerklePath","MerkleTree","hash_1","require","number_1","leafHashes","branches","leaves","root","build","newLeaves","hash","a","b","_a","toBN","sort","x","y","gte","aSorted","bSorted","pedersen","getProof","leaf","branch","hashPath","_b","index","indexOf","Error","isLeft","neededBranch","newHashPath","currentBranchLevelIndex","findIndex","nextBranch","path","rest"],"sources":["C:/Users/admin/Documents/Blockchain test/CairoBootcamp/starknet_js_demo/node_modules/starknet/dist/utils/merkle.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proofMerklePath = exports.MerkleTree = void 0;\nvar hash_1 = require(\"./hash\");\nvar number_1 = require(\"./number\");\nvar MerkleTree = /** @class */ (function () {\n    function MerkleTree(leafHashes) {\n        this.branches = [];\n        this.leaves = leafHashes;\n        this.root = this.build(leafHashes);\n    }\n    MerkleTree.prototype.build = function (leaves) {\n        if (leaves.length === 1) {\n            return leaves[0];\n        }\n        if (leaves.length !== this.leaves.length) {\n            this.branches.push(leaves);\n        }\n        var newLeaves = [];\n        for (var i = 0; i < leaves.length; i += 2) {\n            if (i + 1 === leaves.length) {\n                newLeaves.push(MerkleTree.hash(leaves[i], '0x0'));\n            }\n            else {\n                newLeaves.push(MerkleTree.hash(leaves[i], leaves[i + 1]));\n            }\n        }\n        return this.build(newLeaves);\n    };\n    MerkleTree.hash = function (a, b) {\n        var _a = __read([(0, number_1.toBN)(a), (0, number_1.toBN)(b)].sort(function (x, y) { return (x.gte(y) ? 1 : -1); }), 2), aSorted = _a[0], bSorted = _a[1];\n        return (0, hash_1.pedersen)([aSorted, bSorted]);\n    };\n    MerkleTree.prototype.getProof = function (leaf, branch, hashPath) {\n        var _a, _b;\n        if (branch === void 0) { branch = this.leaves; }\n        if (hashPath === void 0) { hashPath = []; }\n        var index = branch.indexOf(leaf);\n        if (index === -1) {\n            throw new Error('leaf not found');\n        }\n        if (branch.length === 1) {\n            return hashPath;\n        }\n        var isLeft = index % 2 === 0;\n        var neededBranch = (_a = (isLeft ? branch[index + 1] : branch[index - 1])) !== null && _a !== void 0 ? _a : '0x0';\n        var newHashPath = __spreadArray(__spreadArray([], __read(hashPath), false), [neededBranch], false);\n        var currentBranchLevelIndex = this.leaves.length === branch.length\n            ? -1\n            : this.branches.findIndex(function (b) { return b.length === branch.length; });\n        var nextBranch = (_b = this.branches[currentBranchLevelIndex + 1]) !== null && _b !== void 0 ? _b : [this.root];\n        return this.getProof(MerkleTree.hash(isLeft ? leaf : neededBranch, isLeft ? neededBranch : leaf), nextBranch, newHashPath);\n    };\n    return MerkleTree;\n}());\nexports.MerkleTree = MerkleTree;\nfunction proofMerklePath(root, leaf, path) {\n    if (path.length === 0) {\n        return root === leaf;\n    }\n    var _a = __read(path), next = _a[0], rest = _a.slice(1);\n    return proofMerklePath(root, MerkleTree.hash(leaf, next), rest);\n}\nexports.proofMerklePath = proofMerklePath;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}