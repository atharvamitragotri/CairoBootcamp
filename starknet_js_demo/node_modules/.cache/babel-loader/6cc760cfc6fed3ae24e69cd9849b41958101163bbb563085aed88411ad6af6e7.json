{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.estimatedFeeToMaxFee = exports.compileCalldata = exports.formatSignature = exports.makeAddress = exports.randomAddress = exports.compressProgram = void 0;\nvar pako_1 = require(\"pako\");\nvar ellipticCurve_1 = require(\"./ellipticCurve\");\nvar encode_1 = require(\"./encode\");\nvar json_1 = require(\"./json\");\nvar number_1 = require(\"./number\");\n/**\n * Function to compress compiled cairo program\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/services/api/gateway/transaction.py#L54-L58)\n * @param jsonProgram - json file representing the compiled cairo program\n * @returns Compressed cairo program\n */\nfunction compressProgram(jsonProgram) {\n  var stringified = typeof jsonProgram === 'string' ? jsonProgram : (0, json_1.stringify)(jsonProgram);\n  var compressedProgram = (0, pako_1.gzip)(stringified);\n  return (0, encode_1.btoaUniversal)(compressedProgram);\n}\nexports.compressProgram = compressProgram;\nfunction randomAddress() {\n  var randomKeyPair = (0, ellipticCurve_1.genKeyPair)();\n  return (0, ellipticCurve_1.getStarkKey)(randomKeyPair);\n}\nexports.randomAddress = randomAddress;\nfunction makeAddress(input) {\n  return (0, encode_1.addHexPrefix)(input).toLowerCase();\n}\nexports.makeAddress = makeAddress;\nfunction formatSignature(sig) {\n  if (!sig) return [];\n  try {\n    return sig.map(function (x) {\n      return (0, number_1.toBN)(x);\n    }).map(function (x) {\n      return x.toString();\n    });\n  } catch (e) {\n    return [];\n  }\n}\nexports.formatSignature = formatSignature;\nfunction compileCalldata(args) {\n  return Object.values(args).flatMap(function (value) {\n    if (Array.isArray(value)) return __spreadArray([(0, number_1.toBN)(value.length).toString()], __read(value.map(function (x) {\n      return (0, number_1.toBN)(x).toString();\n    })), false);\n    if (typeof value === 'object' && 'type' in value) return Object.entries(value).filter(function (_a) {\n      var _b = __read(_a, 1),\n        k = _b[0];\n      return k !== 'type';\n    }).map(function (_a) {\n      var _b = __read(_a, 2),\n        v = _b[1];\n      return (0, number_1.toBN)(v).toString();\n    });\n    return (0, number_1.toBN)(value).toString();\n  });\n}\nexports.compileCalldata = compileCalldata;\nfunction estimatedFeeToMaxFee(estimatedFee, overhead) {\n  if (overhead === void 0) {\n    overhead = 0.5;\n  }\n  // BN can only handle Integers, so we need to do all calulations with integers\n  var overHeadPercent = Math.round((1 + overhead) * 100);\n  return (0, number_1.toBN)(estimatedFee).mul((0, number_1.toBN)(overHeadPercent)).div((0, number_1.toBN)(100));\n}\nexports.estimatedFeeToMaxFee = estimatedFeeToMaxFee;","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","Object","defineProperty","exports","estimatedFeeToMaxFee","compileCalldata","formatSignature","makeAddress","randomAddress","compressProgram","pako_1","require","ellipticCurve_1","encode_1","json_1","number_1","jsonProgram","stringified","stringify","compressedProgram","gzip","btoaUniversal","randomKeyPair","genKeyPair","getStarkKey","input","addHexPrefix","toLowerCase","sig","map","x","toBN","toString","args","values","flatMap","isArray","entries","filter","_a","_b","k","v","estimatedFee","overhead","overHeadPercent","Math","round","mul","div"],"sources":["C:/Users/admin/Documents/Blockchain test/CairoBootcamp/starknet_js_demo/node_modules/starknet/dist/utils/stark.js"],"sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.estimatedFeeToMaxFee = exports.compileCalldata = exports.formatSignature = exports.makeAddress = exports.randomAddress = exports.compressProgram = void 0;\nvar pako_1 = require(\"pako\");\nvar ellipticCurve_1 = require(\"./ellipticCurve\");\nvar encode_1 = require(\"./encode\");\nvar json_1 = require(\"./json\");\nvar number_1 = require(\"./number\");\n/**\n * Function to compress compiled cairo program\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/services/api/gateway/transaction.py#L54-L58)\n * @param jsonProgram - json file representing the compiled cairo program\n * @returns Compressed cairo program\n */\nfunction compressProgram(jsonProgram) {\n    var stringified = typeof jsonProgram === 'string' ? jsonProgram : (0, json_1.stringify)(jsonProgram);\n    var compressedProgram = (0, pako_1.gzip)(stringified);\n    return (0, encode_1.btoaUniversal)(compressedProgram);\n}\nexports.compressProgram = compressProgram;\nfunction randomAddress() {\n    var randomKeyPair = (0, ellipticCurve_1.genKeyPair)();\n    return (0, ellipticCurve_1.getStarkKey)(randomKeyPair);\n}\nexports.randomAddress = randomAddress;\nfunction makeAddress(input) {\n    return (0, encode_1.addHexPrefix)(input).toLowerCase();\n}\nexports.makeAddress = makeAddress;\nfunction formatSignature(sig) {\n    if (!sig)\n        return [];\n    try {\n        return sig.map(function (x) { return (0, number_1.toBN)(x); }).map(function (x) { return x.toString(); });\n    }\n    catch (e) {\n        return [];\n    }\n}\nexports.formatSignature = formatSignature;\nfunction compileCalldata(args) {\n    return Object.values(args).flatMap(function (value) {\n        if (Array.isArray(value))\n            return __spreadArray([(0, number_1.toBN)(value.length).toString()], __read(value.map(function (x) { return (0, number_1.toBN)(x).toString(); })), false);\n        if (typeof value === 'object' && 'type' in value)\n            return Object.entries(value)\n                .filter(function (_a) {\n                var _b = __read(_a, 1), k = _b[0];\n                return k !== 'type';\n            })\n                .map(function (_a) {\n                var _b = __read(_a, 2), v = _b[1];\n                return (0, number_1.toBN)(v).toString();\n            });\n        return (0, number_1.toBN)(value).toString();\n    });\n}\nexports.compileCalldata = compileCalldata;\nfunction estimatedFeeToMaxFee(estimatedFee, overhead) {\n    if (overhead === void 0) { overhead = 0.5; }\n    // BN can only handle Integers, so we need to do all calulations with integers\n    var overHeadPercent = Math.round((1 + overhead) * 100);\n    return (0, number_1.toBN)(estimatedFee).mul((0, number_1.toBN)(overHeadPercent)).div((0, number_1.toBN)(100));\n}\nexports.estimatedFeeToMaxFee = estimatedFeeToMaxFee;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIH,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOF,CAAC;EAChB,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAI,CAACN,CAAC,CAAC;IAAEO,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACR,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAI,EAAE,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKT,CAAC,GAAGG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEH,CAAC,CAACI,IAAI,CAACD,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAII,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,IAAIO,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEZ,EAAE,EAAEH,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAE,EAAE;IACjF,IAAIG,EAAE,IAAI,EAAEH,CAAC,IAAIY,IAAI,CAAC,EAAE;MACpB,IAAI,CAACT,EAAE,EAAEA,EAAE,GAAGc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,EAAE,CAAC,EAAEZ,CAAC,CAAC;MACpDG,EAAE,CAACH,CAAC,CAAC,GAAGY,IAAI,CAACZ,CAAC,CAAC;IACnB;EACJ;EACA,OAAOW,EAAE,CAACS,MAAM,CAACjB,EAAE,IAAIc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,CAAC,CAAC;AAC5D,CAAC;AACDS,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEf,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7De,OAAO,CAACC,oBAAoB,GAAGD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,eAAe,GAAGH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACK,aAAa,GAAGL,OAAO,CAACM,eAAe,GAAG,KAAK,CAAC;AACjK,IAAIC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAIC,eAAe,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAChD,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAII,QAAQ,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,eAAe,CAACO,WAAW,EAAE;EAClC,IAAIC,WAAW,GAAG,OAAOD,WAAW,KAAK,QAAQ,GAAGA,WAAW,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACI,SAAS,EAAEF,WAAW,CAAC;EACpG,IAAIG,iBAAiB,GAAG,CAAC,CAAC,EAAET,MAAM,CAACU,IAAI,EAAEH,WAAW,CAAC;EACrD,OAAO,CAAC,CAAC,EAAEJ,QAAQ,CAACQ,aAAa,EAAEF,iBAAiB,CAAC;AACzD;AACAhB,OAAO,CAACM,eAAe,GAAGA,eAAe;AACzC,SAASD,aAAa,GAAG;EACrB,IAAIc,aAAa,GAAG,CAAC,CAAC,EAAEV,eAAe,CAACW,UAAU,GAAG;EACrD,OAAO,CAAC,CAAC,EAAEX,eAAe,CAACY,WAAW,EAAEF,aAAa,CAAC;AAC1D;AACAnB,OAAO,CAACK,aAAa,GAAGA,aAAa;AACrC,SAASD,WAAW,CAACkB,KAAK,EAAE;EACxB,OAAO,CAAC,CAAC,EAAEZ,QAAQ,CAACa,YAAY,EAAED,KAAK,CAAC,CAACE,WAAW,EAAE;AAC1D;AACAxB,OAAO,CAACI,WAAW,GAAGA,WAAW;AACjC,SAASD,eAAe,CAACsB,GAAG,EAAE;EAC1B,IAAI,CAACA,GAAG,EACJ,OAAO,EAAE;EACb,IAAI;IACA,OAAOA,GAAG,CAACC,GAAG,CAAC,UAAUC,CAAC,EAAE;MAAE,OAAO,CAAC,CAAC,EAAEf,QAAQ,CAACgB,IAAI,EAAED,CAAC,CAAC;IAAE,CAAC,CAAC,CAACD,GAAG,CAAC,UAAUC,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACE,QAAQ,EAAE;IAAE,CAAC,CAAC;EAC7G,CAAC,CACD,OAAOhD,CAAC,EAAE;IACN,OAAO,EAAE;EACb;AACJ;AACAmB,OAAO,CAACG,eAAe,GAAGA,eAAe;AACzC,SAASD,eAAe,CAAC4B,IAAI,EAAE;EAC3B,OAAOhC,MAAM,CAACiC,MAAM,CAACD,IAAI,CAAC,CAACE,OAAO,CAAC,UAAU/C,KAAK,EAAE;IAChD,IAAIS,KAAK,CAACuC,OAAO,CAAChD,KAAK,CAAC,EACpB,OAAOE,aAAa,CAAC,CAAC,CAAC,CAAC,EAAEyB,QAAQ,CAACgB,IAAI,EAAE3C,KAAK,CAACO,MAAM,CAAC,CAACqC,QAAQ,EAAE,CAAC,EAAE1D,MAAM,CAACc,KAAK,CAACyC,GAAG,CAAC,UAAUC,CAAC,EAAE;MAAE,OAAO,CAAC,CAAC,EAAEf,QAAQ,CAACgB,IAAI,EAAED,CAAC,CAAC,CAACE,QAAQ,EAAE;IAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IAC5J,IAAI,OAAO5C,KAAK,KAAK,QAAQ,IAAI,MAAM,IAAIA,KAAK,EAC5C,OAAOa,MAAM,CAACoC,OAAO,CAACjD,KAAK,CAAC,CACvBkD,MAAM,CAAC,UAAUC,EAAE,EAAE;MACtB,IAAIC,EAAE,GAAGlE,MAAM,CAACiE,EAAE,EAAE,CAAC,CAAC;QAAEE,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC;MACjC,OAAOC,CAAC,KAAK,MAAM;IACvB,CAAC,CAAC,CACGZ,GAAG,CAAC,UAAUU,EAAE,EAAE;MACnB,IAAIC,EAAE,GAAGlE,MAAM,CAACiE,EAAE,EAAE,CAAC,CAAC;QAAEG,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;MACjC,OAAO,CAAC,CAAC,EAAEzB,QAAQ,CAACgB,IAAI,EAAEW,CAAC,CAAC,CAACV,QAAQ,EAAE;IAC3C,CAAC,CAAC;IACN,OAAO,CAAC,CAAC,EAAEjB,QAAQ,CAACgB,IAAI,EAAE3C,KAAK,CAAC,CAAC4C,QAAQ,EAAE;EAC/C,CAAC,CAAC;AACN;AACA7B,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC,SAASD,oBAAoB,CAACuC,YAAY,EAAEC,QAAQ,EAAE;EAClD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;IAAEA,QAAQ,GAAG,GAAG;EAAE;EAC3C;EACA,IAAIC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGH,QAAQ,IAAI,GAAG,CAAC;EACtD,OAAO,CAAC,CAAC,EAAE7B,QAAQ,CAACgB,IAAI,EAAEY,YAAY,CAAC,CAACK,GAAG,CAAC,CAAC,CAAC,EAAEjC,QAAQ,CAACgB,IAAI,EAAEc,eAAe,CAAC,CAAC,CAACI,GAAG,CAAC,CAAC,CAAC,EAAElC,QAAQ,CAACgB,IAAI,EAAE,GAAG,CAAC,CAAC;AACjH;AACA5B,OAAO,CAACC,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}